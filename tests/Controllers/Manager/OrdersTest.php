<?php

namespace Tests\Controllers\Manager;

use App\Models\Orders\Orders;
use App\Models\Users\Permission;
use App\Models\Users\Role;
use App\Models\User;
use Session;
use TestCase;

class OrdersTest extends TestCase
{

    protected $user;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        Session::start();

        $this->createUserWithPermissions();
    }

    private function createUserWithPermissions()
    {

        $role = Role::create([
            'title' => 'phpUnit'
        ]);

        $permission = Permission::where('title', 'orders')->whereHas('group', function ($query) {
            return $query->where('title', 'manager');
        })->first();

        $role->permissions()->save($permission);

        $user = factory(User::class)->create();

        $user->role_id = $role->id;

        $user->save();

        $this->user = $user;

    }

    public function test_index()
    {
        $this->actingAs($this->user);

        $this->visit("/manager/orders")->assertResponseOk();

    }

    public function test_edit()
    {
        $this->actingAs($this->user);

        $order = Orders::firstOrCreate([]);

        $this->visit("/manager/orders/$order->id/edit");

        $this->assertResponseOk();

    }

    public function test_update_auth()
    {
        $this->actingAs($this->user);

        $order = Orders::firstOrCreate([]);

        $this->visit("/manager/orders/$order->id/edit")->submitForm('save');

        $this->assertResponseOk();
    }

    public function test_delete()
    {
        $this->actingAs($this->user);

        $order = Orders::create();

        $this->post("/manager/orders/$order->id", [
            '_method' => 'DELETE',
            '_token'  => csrf_token()
        ]);

        $this->assertResponseOk();
    }

    public function tearDown()
    {

        $this->user->role->delete();

        $this->user->delete();

        parent::tearDown(); // TODO: Change the autogenerated stub

    }
}